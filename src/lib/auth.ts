import { SignJWT, jwtVerify } from 'jose'; import { cookies } from 'next/headers'; const secret=new TextEncoder().encode(process.env.JWT_SECRET||'dev-secret'); export type SessionPayload={email:string;name?:string|null}; export async function createSession(payload:SessionPayload){ const token=await new SignJWT(payload).setProtectedHeader({alg:'HS256'}).setIssuedAt().setExpirationTime('30d').sign(secret); cookies().set('snout_session', token,{ httpOnly:true, secure:process.env.NODE_ENV==='production', sameSite:'lax', path:'/' }); } export async function readSession(){ const token=cookies().get('snout_session')?.value; if(!token) return null; try{ const {payload}=await jwtVerify(token, secret); return payload as SessionPayload; }catch{return null;} } export function clearSession(){ cookies().set('snout_session','',{ httpOnly:true, secure:process.env.NODE_ENV==='production', sameSite:'lax', path:'/', maxAge:0 }); }