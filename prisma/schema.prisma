// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  // Pooled URL for runtime
  url       = env("DATABASE_URL")
  // Direct URL for prisma db push / migrate / seed
  directUrl = env("DIRECT_URL")
}

model User {
  id           String    @id @default(cuid())
  email        String    @unique
  name         String?
  role         Role      @default(USER)
  passwordHash String?   // for password login
  createdAt    DateTime  @default(now())

  listings   Listing[]
  inquiries  Inquiry[]      // opposite: Inquiry.user
  profile    SellerProfile? // opposite: SellerProfile.user

  @@index([email])
}

model SellerProfile {
  id           String   @id @default(cuid())
  userId       String   @unique
  user         User     @relation(fields: [userId], references: [id])

  // Common seller fields used in seeds/UI
  displayName  String
  phone        String?
  city         String?
  countryCode  String?  // store 2-letter code like "DK", "DE"
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Listing {
  id           String        @id @default(cuid())
  title        String
  description  String
  priceCents   Int
  currency     String        @default("DKK")
  location     String?
  imageUrl     String?
  status       ListingStatus @default(ACTIVE)

  userId   String
  user     User   @relation(fields: [userId], references: [id])

  categoryId String?
  category   Category? @relation(fields: [categoryId], references: [id])

  isAnimal     Boolean  @default(false)
  breed        String?
  ageMonths    Int?
  sex          Sex?
  vaccinated   Boolean?
  microchipped Boolean?
  pedigree     Boolean?
  color        String?
  size         String?

  createdAt DateTime  @default(now())

  inquiries Inquiry[]

  @@index([status])
  @@index([title])
}

model Inquiry {
  id         String   @id @default(cuid())

  listingId  String
  listing    Listing  @relation(fields: [listingId], references: [id])

  userId     String?
  user       User?    @relation(fields: [userId], references: [id])

  buyerName  String
  buyerEmail String
  message    String
  ip         String?
  userAgent  String?

  createdAt  DateTime @default(now())

  @@index([listingId])
  @@index([userId])
}

model MagicLink {
  id        String   @id @default(cuid())
  email     String
  token     String   @unique
  expiresAt DateTime
  usedAt    DateTime?
  createdAt DateTime @default(now())

  @@index([email])
}

model Category {
  id    String  @id @default(cuid())
  slug  String  @unique
  name  String

  listings Listing[]
}

enum ListingStatus {
  ACTIVE
  INACTIVE
}

enum Role {
  USER
  ADMIN
}

enum Sex {
  MALE
  FEMALE
}

